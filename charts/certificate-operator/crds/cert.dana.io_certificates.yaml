apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: certificates.cert.dana.io
spec:
  group: cert.dana.io
  names:
    kind: Certificate
    listKind: CertificateList
    plural: certificates
    singular: certificate
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Certificate is the Schema for the certificates API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: CertificateSpec defines the desired state of a Certificate.
              properties:
                certificateData:
                  description: CertificateData contains the data for generating the
                    certificate.
                  properties:
                    form:
                      default: pfx
                      description: Form is an optional field specifying the format of
                        the certificate.
                      enum:
                        - pfx
                      type: string
                    san:
                      description: San represents Subject Alternative Names of the certificate.
                      properties:
                        dns:
                          description: DNS represents the DNS names included in the
                            certificate.
                          items:
                            type: string
                          type: array
                        ips:
                          description: IPs represents the IP addresses included in the
                            certificate.
                          items:
                            type: string
                          type: array
                      type: object
                    subject:
                      description: Subject represents the subject of the certificate.
                      properties:
                        commonName:
                          description: CommonName is the common name of the subject.
                          type: string
                        country:
                          type: string
                        locality:
                          type: string
                        organization:
                          type: string
                        organizationUnit:
                          type: string
                        state:
                          type: string
                      type: object
                    template:
                      description: Template is an optional field specifying the template
                        for the certificate.
                      type: string
                  type: object
                configRef:
                  description: ConfigRef is the referance to the CertificateConfig associated
                    with this Certificate.
                  properties:
                    name:
                      description: Name of the CertificateConfig.
                      type: string
                  required:
                    - name
                  type: object
                secretName:
                  description: SecretName is the name of the Kubernetes Secret where
                    the extracted certificate is stored.
                  type: string
              type: object
            status:
              description: CertificateStatus defines the observed state of a Certificate.
              properties:
                conditions:
                  description: Conditions represent the current conditions of the Certificate.
                  items:
                    description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: |-
                          type of condition in CamelCase or in foo.example.com/CamelCase.
                          ---
                          Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict is important.
                          The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                guid:
                  description: Guid is a unique identifier for the certificate.
                  type: string
                issuer:
                  description: Issuer is the entity that issued the certificate.
                  type: string
                secretName:
                  description: SecretName is the name of the Kubernetes Secret where
                    the extracted certificate is stored.
                  type: string
                signatureHashAlgorithm:
                  description: SignatureHashAlgorithm is the algorithm used to sign
                    the certificate.
                  type: string
                validFrom:
                  description: ValidFrom represents the time when the certificate becomes
                    valid.
                  format: date-time
                  type: string
                validTo:
                  description: ValidTo represents the time when the certificate expires.
                  format: date-time
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
